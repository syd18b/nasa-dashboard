import{r as u,i as d,x as s}from"./eb6a1e5c.js";var a=Object.freeze,p=Object.defineProperty,i=(n,t)=>a(p(n,"raw",{value:a(t||n.slice())})),l,r,h;class o extends u{static get properties(){return{title:{type:String},loading:{type:Boolean,reflect:!0},items:{type:Array},value:{type:String}}}static get styles(){return d(l||(l=i(["\n      :host {\n        display: block;\n      }\n      :host([loading]) .results {\n        opacity: 0.1;\n        visibility: hidden;\n        height: 1px;\n      }\n      .results {\n        visibility: visible;\n        height: 100%;\n        opacity: 1;\n        transition-delay: 0.5s;\n        transition: 0.5s all ease-in-out;\n      }\n\n      details {\n        margin: 16px;\n        padding: 16px;\n        background-color: blue;\n      }\n      summary {\n        font-size: 24px;\n        padding: 8px;\n        color: white;\n        font-size: 42px;\n      }\n      input {\n        font-size: 20px;\n        line-height: 40px;\n        width: 100%;\n      }\n    "])))}constructor(){super(),this.value=null,this.title="",this.loading=!1,this.items=[]}render(){return s(h||(h=i(["\n      <h2>",'</h2>\n      <details open>\n        <summary>Search inputs</summary>\n        <div>\n          <input\n            id="input"\n            placeholder="Search NASA images"\n            @input="','"\n          />\n        </div>\n      </details>\n      <div class="results">\n        ',"\n      </div>\n    "])),this.title,this.inputChanged,this.items.map((t,e)=>s(r||(r=i(['\n            <nasa-image\n              source="','"\n              title="','"\n              owner="','"\n            ></nasa-image>\n          '])),t.links[0].href,t.data[0].title,t.data[0].secondary_creator)))}inputChanged(t){this.value=this.shadowRoot.querySelector("#input").value}updated(t){t.has("value")&&this.value?this.updateResults(this.value):t.has("value")&&!this.value&&(this.items=[]),t.has("items")&&this.items.length>0&&console.log(this.items)}updateResults(t){this.loading=!0,fetch("https://images-api.nasa.gov/search?media_type=image&q=".concat(t)).then(e=>e.ok?e.json():{}).then(e=>{e.collection&&(this.items=[],this.items=e.collection.items,this.loading=!1)})}static get tag(){return"nasa-search"}}customElements.define(o.tag,o);
